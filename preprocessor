#include<stdio.h> //after preprocessing stage all the (.h) are copied into (.i) and all the comments are removed
#define PI 3.14
#define MAX(x,y) ((x>y)?x:y)
#define PRIYA 1
int main()
{
        int a,b,max;
        printf("enter 2 numbers");
        scanf("%d %d",&a,&b);
        max=MAX(a,b); //it will be replaced as ((a>b)?a:b)
        printf("mul=%.2f \n",PI*2.2); //multiply macro with a value
        printf("greatest number is=%d \n",max);
        printf("From Capability team");
        #if PRIYA //if directive 
                printf(" welcome to ThunderSoft");
        #endif //end of the if directive
        printf(" priya \n");
}

output:

enter 2 numbers8 10
mul=6.91 
greatest number is=10 
From Capability team welcome to ThunderSoft priya 


COMPILATION STAGES:
(i) .i
# 1 "preprocessor.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "preprocessor.c"
# 1 "/usr/include/stdio.h" 1 3 4
# 27 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 367 "/usr/include/features.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 1 3 4
# 410 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 411 "/usr/include/x86_64-linux-gnu/sys/cdefs.h" 2 3 4
# 368 "/usr/include/features.h" 2 3 4
# 391 "/usr/include/features.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 1 3 4
# 10 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/gnu/stubs-64.h" 1 3 4
# 11 "/usr/include/x86_64-linux-gnu/gnu/stubs.h" 2 3 4
# 392 "/usr/include/features.h" 2 3 4
# 28 "/usr/include/stdio.h" 2 3 4





# 1 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 1 3 4
# 216 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3 4

# 216 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3 4
typedef long unsigned int size_t;
# 34 "/usr/include/stdio.h" 2 3 4

# 1 "/usr/include/x86_64-linux-gnu/bits/types.h" 1 3 4
# 27 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/wordsize.h" 1 3 4
# 28 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;

typedef signed long int __int64_t;
typedef unsigned long int __uint64_t;







typedef long int __quad_t;
typedef unsigned long int __u_quad_t;
# 121 "/usr/include/x86_64-linux-gnu/bits/types.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/typesizes.h" 1 3 4
# 122 "/usr/include/x86_64-linux-gnu/bits/types.h" 2 3 4


typedef unsigned long int __dev_t;
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef unsigned long int __ino_t;
typedef unsigned long int __ino64_t;
typedef unsigned int __mode_t;
typedef unsigned long int __nlink_t;
typedef long int __off_t;
typedef long int __off64_t;
typedef int __pid_t;
typedef struct { int __val[2]; } __fsid_t;
typedef long int __clock_t;
typedef unsigned long int __rlim_t;
typedef unsigned long int __rlim64_t;
typedef unsigned int __id_t;
typedef long int __time_t;
typedef unsigned int __useconds_t;
typedef long int __suseconds_t;

typedef int __daddr_t;
typedef int __key_t;


typedef int __clockid_t;


typedef void * __timer_t;


typedef long int __blksize_t;




typedef long int __blkcnt_t;
typedef long int __blkcnt64_t;


typedef unsigned long int __fsblkcnt_t;
typedef unsigned long int __fsblkcnt64_t;


typedef unsigned long int __fsfilcnt_t;
typedef unsigned long int __fsfilcnt64_t;


typedef long int __fsword_t;

typedef long int __ssize_t;


typedef long int __syscall_slong_t;

typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


typedef long int __intptr_t;


typedef unsigned int __socklen_t;
# 36 "/usr/include/stdio.h" 2 3 4
# 44 "/usr/include/stdio.h" 3 4
struct _IO_FILE;



typedef struct _IO_FILE FILE;





# 64 "/usr/include/stdio.h" 3 4
typedef struct _IO_FILE __FILE;
# 74 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/libio.h" 1 3 4
# 31 "/usr/include/libio.h" 3 4
# 1 "/usr/include/_G_config.h" 1 3 4
# 15 "/usr/include/_G_config.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 1 3 4
# 16 "/usr/include/_G_config.h" 2 3 4




# 1 "/usr/include/wchar.h" 1 3 4
# 82 "/usr/include/wchar.h" 3 4
typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;



    char __wchb[4];
  } __value;
} __mbstate_t;
# 21 "/usr/include/_G_config.h" 2 3 4
typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 32 "/usr/include/libio.h" 2 3 4
# 49 "/usr/include/libio.h" 3 4
# 1 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 50 "/usr/include/libio.h" 2 3 4
# 144 "/usr/include/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;





typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 173 "/usr/include/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 241 "/usr/include/libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 289 "/usr/include/libio.h" 3 4
  __off64_t _offset;







  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;

  size_t __pad5;
  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};


typedef struct _IO_FILE _IO_FILE;


struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 333 "/usr/include/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);
# 385 "/usr/include/libio.h" 3 4
extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 429 "/usr/include/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ferror (_IO_FILE *__fp) __attribute__ ((__nothrow__ , __leaf__));

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern void _IO_funlockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
extern int _IO_ftrylockfile (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 459 "/usr/include/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) __attribute__ ((__nothrow__ , __leaf__));
# 75 "/usr/include/stdio.h" 2 3 4




typedef __gnuc_va_list va_list;
# 90 "/usr/include/stdio.h" 3 4
typedef __off_t off_t;
# 102 "/usr/include/stdio.h" 3 4
typedef __ssize_t ssize_t;







typedef _G_fpos_t fpos_t;




# 164 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/x86_64-linux-gnu/bits/stdio_lim.h" 1 3 4
# 165 "/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;







extern int remove (const char *__filename) __attribute__ ((__nothrow__ , __leaf__));

extern int rename (const char *__old, const char *__new) __attribute__ ((__nothrow__ , __leaf__));




extern int renameat (int __oldfd, const char *__old, int __newfd,
       const char *__new) __attribute__ ((__nothrow__ , __leaf__));








extern FILE *tmpfile (void) ;
# 209 "/usr/include/stdio.h" 3 4
extern char *tmpnam (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;





extern char *tmpnam_r (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;
# 227 "/usr/include/stdio.h" 3 4
extern char *tempnam (const char *__dir, const char *__pfx)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;








extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

# 252 "/usr/include/stdio.h" 3 4
extern int fflush_unlocked (FILE *__stream);
# 266 "/usr/include/stdio.h" 3 4






extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes) ;




extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 295 "/usr/include/stdio.h" 3 4

# 306 "/usr/include/stdio.h" 3 4
extern FILE *fdopen (int __fd, const char *__modes) __attribute__ ((__nothrow__ , __leaf__)) ;
# 319 "/usr/include/stdio.h" 3 4
extern FILE *fmemopen (void *__s, size_t __len, const char *__modes)
  __attribute__ ((__nothrow__ , __leaf__)) ;




extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) __attribute__ ((__nothrow__ , __leaf__)) ;






extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__ , __leaf__));





extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,
         size_t __size) __attribute__ ((__nothrow__ , __leaf__));


extern void setlinebuf (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));








extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));





extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));

# 412 "/usr/include/stdio.h" 3 4
extern int vdprintf (int __fd, const char *__restrict __fmt,
       __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 2, 0)));
extern int dprintf (int __fd, const char *__restrict __fmt, ...)
     __attribute__ ((__format__ (__printf__, 2, 3)));








extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) ;




extern int scanf (const char *__restrict __format, ...) ;

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));
# 443 "/usr/include/stdio.h" 3 4
extern int fscanf (FILE *__restrict __stream, const char *__restrict __format, ...) __asm__ ("" "__isoc99_fscanf")

                               ;
extern int scanf (const char *__restrict __format, ...) __asm__ ("" "__isoc99_scanf")
                              ;
extern int sscanf (const char *__restrict __s, const char *__restrict __format, ...) __asm__ ("" "__isoc99_sscanf") __attribute__ ((__nothrow__ , __leaf__))

                      ;
# 463 "/usr/include/stdio.h" 3 4








extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__scanf__, 2, 0)));
# 494 "/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vfscanf")



     __attribute__ ((__format__ (__scanf__, 2, 0))) ;
extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vscanf")

     __attribute__ ((__format__ (__scanf__, 1, 0))) ;
extern int vsscanf (const char *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vsscanf") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__ ((__format__ (__scanf__, 2, 0)));
# 522 "/usr/include/stdio.h" 3 4









extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);

# 550 "/usr/include/stdio.h" 3 4
extern int getc_unlocked (FILE *__stream);
extern int getchar_unlocked (void);
# 561 "/usr/include/stdio.h" 3 4
extern int fgetc_unlocked (FILE *__stream);











extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);

# 594 "/usr/include/stdio.h" 3 4
extern int fputc_unlocked (int __c, FILE *__stream);







extern int putc_unlocked (int __c, FILE *__stream);
extern int putchar_unlocked (int __c);






extern int getw (FILE *__stream);


extern int putw (int __w, FILE *__stream);








extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;
# 640 "/usr/include/stdio.h" 3 4

# 665 "/usr/include/stdio.h" 3 4
extern __ssize_t __getdelim (char **__restrict __lineptr,
          size_t *__restrict __n, int __delimiter,
          FILE *__restrict __stream) ;
extern __ssize_t getdelim (char **__restrict __lineptr,
        size_t *__restrict __n, int __delimiter,
        FILE *__restrict __stream) ;







extern __ssize_t getline (char **__restrict __lineptr,
       size_t *__restrict __n,
       FILE *__restrict __stream) ;








extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);

# 737 "/usr/include/stdio.h" 3 4
extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
         size_t __n, FILE *__restrict __stream) ;
extern size_t fwrite_unlocked (const void *__restrict __ptr, size_t __size,
          size_t __n, FILE *__restrict __stream);








extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);

# 773 "/usr/include/stdio.h" 3 4
extern int fseeko (FILE *__stream, __off_t __off, int __whence);




extern __off_t ftello (FILE *__stream) ;
# 792 "/usr/include/stdio.h" 3 4






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, const fpos_t *__pos);
# 815 "/usr/include/stdio.h" 3 4

# 824 "/usr/include/stdio.h" 3 4


extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;




extern void clearerr_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
extern int feof_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;
extern int ferror_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;








extern void perror (const char *__s);






# 1 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 1 3 4
# 26 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3 4
extern int sys_nerr;
extern const char *const sys_errlist[];
# 854 "/usr/include/stdio.h" 2 3 4




extern int fileno (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;




extern int fileno_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;
# 872 "/usr/include/stdio.h" 3 4
extern FILE *popen (const char *__command, const char *__modes) ;





extern int pclose (FILE *__stream);





extern char *ctermid (char *__s) __attribute__ ((__nothrow__ , __leaf__));
# 912 "/usr/include/stdio.h" 3 4
extern void flockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));



extern int ftrylockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;


extern void funlockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
# 942 "/usr/include/stdio.h" 3 4

# 2 "preprocessor.c" 2




# 5 "preprocessor.c"
int main()
{
 int a,b,max;
 printf("enter 2 numbers");
 scanf("%d %d",&a,&b);
 max=((a>b)?a:b);
 printf("mul=%.2f \n",3.14*2.2);
 printf("greatest number is=%d \n",max);
 printf("From Capability team");

  printf(" welcome to ThunderSoft");

 printf(" priya \n");
}

2.s
	.file	"preprocessor.c"
	.section	.rodata
.LC0:
	.string	"enter 2 numbers"
.LC1:
	.string	"%d %d"
.LC3:
	.string	"mul=%.2f \n"
.LC4:
	.string	"greatest number is=%d \n"
.LC5:
	.string	"From Capability team"
.LC6:
	.string	" welcome to ThunderSoft"
.LC7:
	.string	" priya "
	.text
	.globl	main
	.type	main, @function
main:
.LFB0:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$48, %rsp
	movq	%fs:40, %rax
	movq	%rax, -8(%rbp)
	xorl	%eax, %eax
	movl	$.LC0, %edi
	movl	$0, %eax
	call	printf
	leaq	-16(%rbp), %rdx
	leaq	-20(%rbp), %rax
	movq	%rax, %rsi
	movl	$.LC1, %edi
	movl	$0, %eax
	call	__isoc99_scanf
	movl	-16(%rbp), %edx
	movl	-20(%rbp), %eax
	cmpl	%eax, %edx
	cmovge	%edx, %eax
	movl	%eax, -12(%rbp)
	movabsq	$4619463734983856752, %rax
	movq	%rax, -40(%rbp)
	movsd	-40(%rbp), %xmm0
	movl	$.LC3, %edi
	movl	$1, %eax
	call	printf
	movl	-12(%rbp), %eax
	movl	%eax, %esi
	movl	$.LC4, %edi
	movl	$0, %eax
	call	printf
	movl	$.LC5, %edi
	movl	$0, %eax
	call	printf
	movl	$.LC6, %edi
	movl	$0, %eax
	call	printf
	movl	$.LC7, %edi
	call	puts
	movl	$0, %eax
	movq	-8(%rbp), %rcx
	xorq	%fs:40, %rcx
	je	.L3
	call	__stack_chk_fail
.L3:
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE0:
	.size	main, .-main
	.ident	"GCC: (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609"
	.section	.note.GNU-stack,"",@progbits

3 .o
ELF>h@@
UH��H��0dH�%(H�E�1����H�U�H�E�H�ƿ���U��E�9�ME�H�p��ʡ@H�E��Eؿ���E��ƿ�����������H�M�dH3
                                                                                           %(t���enter 2 numbers%d %dmul=%.2f 
greatest number is=%d 
From Capability team welcome to ThunderSoft priya GCC: (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609zRx
�                                                                                                           ��A�C
  ���+0preprocessor.cmainprintf__isoc99_scanfputs__stack_chk_fail
"
��������2
<
   ��������b
l
��������v
!�
���������
9�
���������
N�
���������
f�
�������� .symtab.strtab.shstrtab.rela.text.data.bss.rodata.comment.note.GNU-stack.rela.eh_frame @�@�h
                                                                                                              &1n90u6B�W�R@�
                                                                                                                                                   a�P
                                                                                                                                                               	8A

4 .exe
0000000 177   E   L   F 002 001 001  \0  \0  \0  \0  \0  \0  \0  \0  \0
0000020 001  \0   >  \0 001  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0000040  \0  \0  \0  \0  \0  \0  \0  \0   h 005  \0  \0  \0  \0  \0  \0
0000060  \0  \0  \0  \0   @  \0  \0  \0  \0  \0   @  \0  \r  \0  \n  \0
0000100   U   H 211 345   H 203 354   0   d   H 213 004   %   (  \0  \0
0000120  \0   H 211   E 370   1 300 277  \0  \0  \0  \0 270  \0  \0  \0
0000140  \0 350  \0  \0  \0  \0   H 215   U 360   H 215   E 354   H 211
0000160 306 277  \0  \0  \0  \0 270  \0  \0  \0  \0 350  \0  \0  \0  \0
0000200 213   U 360 213   E 354   9 302 017   M 302 211   E 364   H 270
0000220   p 022 203 300 312 241 033   @   H 211   E 330 362 017 020   E
0000240 330 277  \0  \0  \0  \0 270 001  \0  \0  \0 350  \0  \0  \0  \0
0000260 213   E 364 211 306 277  \0  \0  \0  \0 270  \0  \0  \0  \0 350
0000300  \0  \0  \0  \0 277  \0  \0  \0  \0 270  \0  \0  \0  \0 350  \0
0000320  \0  \0  \0 277  \0  \0  \0  \0 270  \0  \0  \0  \0 350  \0  \0
0000340  \0  \0 277  \0  \0  \0  \0 350  \0  \0  \0  \0 270  \0  \0  \0
0000360  \0   H 213   M 370   d   H   3  \f   %   (  \0  \0  \0   t 005
0000400 350  \0  \0  \0  \0 311 303   e   n   t   e   r       2       n
0000420   u   m   b   e   r   s  \0   %   d       %   d  \0   m   u   l
0000440   =   %   .   2   f      \n  \0   g   r   e   a   t   e   s   t
0000460       n   u   m   b   e   r       i   s   =   %   d      \n  \0
0000500   F   r   o   m       C   a   p   a   b   i   l   i   t   y    
0000520   t   e   a   m  \0       w   e   l   c   o   m   e       t   o
0000540       T   h   u   n   d   e   r   S   o   f   t  \0       p   r
0000560   i   y   a      \0  \0   G   C   C   :       (   U   b   u   n
0000600   t   u       5   .   4   .   0   -   6   u   b   u   n   t   u
0000620   1   ~   1   6   .   0   4   .   1   2   )       5   .   4   .
0000640   0       2   0   1   6   0   6   0   9  \0  \0  \0  \0  \0  \0
0000660 024  \0  \0  \0  \0  \0  \0  \0 001   z   R  \0 001   x 020 001
0000700 033  \f  \a  \b 220 001  \0  \0 034  \0  \0  \0 034  \0  \0  \0
0000720  \0  \0  \0  \0 307  \0  \0  \0  \0   A 016 020 206 002   C  \r
0000740 006 002 302  \f  \a  \b  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0000760  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0001000 001  \0  \0  \0 004  \0 361 377  \0  \0  \0  \0  \0  \0  \0  \0
0001020  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0 003  \0 001  \0
0001040  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0001060  \0  \0  \0  \0 003  \0 003  \0  \0  \0  \0  \0  \0  \0  \0  \0
0001100  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0 003  \0 004  \0
0001120  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0001140  \0  \0  \0  \0 003  \0 005  \0  \0  \0  \0  \0  \0  \0  \0  \0
0001160  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0 003  \0  \a  \0
0001200  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0001220  \0  \0  \0  \0 003  \0  \b  \0  \0  \0  \0  \0  \0  \0  \0  \0
0001240  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0 003  \0 006  \0
0001260  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0001300 020  \0  \0  \0 022  \0 001  \0  \0  \0  \0  \0  \0  \0  \0  \0
0001320 307  \0  \0  \0  \0  \0  \0  \0 025  \0  \0  \0 020  \0  \0  \0
0001340  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0001360 034  \0  \0  \0 020  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0001400  \0  \0  \0  \0  \0  \0  \0  \0   +  \0  \0  \0 020  \0  \0  \0
0001420  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0001440   0  \0  \0  \0 020  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0001460  \0  \0  \0  \0  \0  \0  \0  \0  \0   p   r   e   p   r   o   c
0001500   e   s   s   o   r   .   c  \0   m   a   i   n  \0   p   r   i
0001520   n   t   f  \0   _   _   i   s   o   c   9   9   _   s   c   a
0001540   n   f  \0   p   u   t   s  \0   _   _   s   t   a   c   k   _
0001560   c   h   k   _   f   a   i   l  \0  \0  \0  \0  \0  \0  \0  \0
0001600 030  \0  \0  \0  \0  \0  \0  \0  \n  \0  \0  \0 005  \0  \0  \0
0001620  \0  \0  \0  \0  \0  \0  \0  \0   "  \0  \0  \0  \0  \0  \0  \0
0001640 002  \0  \0  \0  \n  \0  \0  \0 374 377 377 377 377 377 377 377
0001660   2  \0  \0  \0  \0  \0  \0  \0  \n  \0  \0  \0 005  \0  \0  \0
0001700 020  \0  \0  \0  \0  \0  \0  \0   <  \0  \0  \0  \0  \0  \0  \0
0001720 002  \0  \0  \0  \v  \0  \0  \0 374 377 377 377 377 377 377 377
0001740   b  \0  \0  \0  \0  \0  \0  \0  \n  \0  \0  \0 005  \0  \0  \0
0001760 026  \0  \0  \0  \0  \0  \0  \0   l  \0  \0  \0  \0  \0  \0  \0
0002000 002  \0  \0  \0  \n  \0  \0  \0 374 377 377 377 377 377 377 377
0002020   v  \0  \0  \0  \0  \0  \0  \0  \n  \0  \0  \0 005  \0  \0  \0
0002040   !  \0  \0  \0  \0  \0  \0  \0 200  \0  \0  \0  \0  \0  \0  \0
0002060 002  \0  \0  \0  \n  \0  \0  \0 374 377 377 377 377 377 377 377
0002100 205  \0  \0  \0  \0  \0  \0  \0  \n  \0  \0  \0 005  \0  \0  \0
0002120   9  \0  \0  \0  \0  \0  \0  \0 217  \0  \0  \0  \0  \0  \0  \0
0002140 002  \0  \0  \0  \n  \0  \0  \0 374 377 377 377 377 377 377 377
0002160 224  \0  \0  \0  \0  \0  \0  \0  \n  \0  \0  \0 005  \0  \0  \0
0002200   N  \0  \0  \0  \0  \0  \0  \0 236  \0  \0  \0  \0  \0  \0  \0
0002220 002  \0  \0  \0  \n  \0  \0  \0 374 377 377 377 377 377 377 377
0002240 243  \0  \0  \0  \0  \0  \0  \0  \n  \0  \0  \0 005  \0  \0  \0
0002260   f  \0  \0  \0  \0  \0  \0  \0 250  \0  \0  \0  \0  \0  \0  \0
0002300 002  \0  \0  \0  \f  \0  \0  \0 374 377 377 377 377 377 377 377
0002320 301  \0  \0  \0  \0  \0  \0  \0 002  \0  \0  \0  \r  \0  \0  \0
0002340 374 377 377 377 377 377 377 377      \0  \0  \0  \0  \0  \0  \0
0002360 002  \0  \0  \0 002  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0002400  \0   .   s   y   m   t   a   b  \0   .   s   t   r   t   a   b
0002420  \0   .   s   h   s   t   r   t   a   b  \0   .   r   e   l   a
0002440   .   t   e   x   t  \0   .   d   a   t   a  \0   .   b   s   s
0002460  \0   .   r   o   d   a   t   a  \0   .   c   o   m   m   e   n
0002500   t  \0   .   n   o   t   e   .   G   N   U   -   s   t   a   c
0002520   k  \0   .   r   e   l   a   .   e   h   _   f   r   a   m   e
0002540  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
*
0002640  \0  \0  \0  \0  \0  \0  \0  \0      \0  \0  \0 001  \0  \0  \0
0002660 006  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0002700   @  \0  \0  \0  \0  \0  \0  \0 307  \0  \0  \0  \0  \0  \0  \0
0002720  \0  \0  \0  \0  \0  \0  \0  \0 001  \0  \0  \0  \0  \0  \0  \0
0002740  \0  \0  \0  \0  \0  \0  \0  \0 033  \0  \0  \0 004  \0  \0  \0
0002760   @  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0003000 200 003  \0  \0  \0  \0  \0  \0   h 001  \0  \0  \0  \0  \0  \0
0003020  \v  \0  \0  \0 001  \0  \0  \0  \b  \0  \0  \0  \0  \0  \0  \0
0003040 030  \0  \0  \0  \0  \0  \0  \0   &  \0  \0  \0 001  \0  \0  \0
0003060 003  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0003100  \a 001  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0003120  \0  \0  \0  \0  \0  \0  \0  \0 001  \0  \0  \0  \0  \0  \0  \0
0003140  \0  \0  \0  \0  \0  \0  \0  \0   ,  \0  \0  \0  \b  \0  \0  \0
0003160 003  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0003200  \a 001  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0003220  \0  \0  \0  \0  \0  \0  \0  \0 001  \0  \0  \0  \0  \0  \0  \0
0003240  \0  \0  \0  \0  \0  \0  \0  \0   1  \0  \0  \0 001  \0  \0  \0
0003260 002  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0003300  \a 001  \0  \0  \0  \0  \0  \0   n  \0  \0  \0  \0  \0  \0  \0
0003320  \0  \0  \0  \0  \0  \0  \0  \0 001  \0  \0  \0  \0  \0  \0  \0
0003340  \0  \0  \0  \0  \0  \0  \0  \0   9  \0  \0  \0 001  \0  \0  \0
0003360   0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0003400   u 001  \0  \0  \0  \0  \0  \0   6  \0  \0  \0  \0  \0  \0  \0
0003420  \0  \0  \0  \0  \0  \0  \0  \0 001  \0  \0  \0  \0  \0  \0  \0
0003440 001  \0  \0  \0  \0  \0  \0  \0   B  \0  \0  \0 001  \0  \0  \0
0003460  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0003500 253 001  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0003520  \0  \0  \0  \0  \0  \0  \0  \0 001  \0  \0  \0  \0  \0  \0  \0
0003540  \0  \0  \0  \0  \0  \0  \0  \0   W  \0  \0  \0 001  \0  \0  \0
0003560 002  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0003600 260 001  \0  \0  \0  \0  \0  \0   8  \0  \0  \0  \0  \0  \0  \0
0003620  \0  \0  \0  \0  \0  \0  \0  \0  \b  \0  \0  \0  \0  \0  \0  \0
0003640  \0  \0  \0  \0  \0  \0  \0  \0   R  \0  \0  \0 004  \0  \0  \0
0003660   @  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0003700 350 004  \0  \0  \0  \0  \0  \0 030  \0  \0  \0  \0  \0  \0  \0
0003720  \v  \0  \0  \0  \b  \0  \0  \0  \b  \0  \0  \0  \0  \0  \0  \0
0003740 030  \0  \0  \0  \0  \0  \0  \0 021  \0  \0  \0 003  \0  \0  \0
0003760  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0004000  \0 005  \0  \0  \0  \0  \0  \0   a  \0  \0  \0  \0  \0  \0  \0
0004020  \0  \0  \0  \0  \0  \0  \0  \0 001  \0  \0  \0  \0  \0  \0  \0
0004040  \0  \0  \0  \0  \0  \0  \0  \0 001  \0  \0  \0 002  \0  \0  \0
0004060  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0004100 350 001  \0  \0  \0  \0  \0  \0   P 001  \0  \0  \0  \0  \0  \0
0004120  \f  \0  \0  \0  \t  \0  \0  \0  \b  \0  \0  \0  \0  \0  \0  \0
0004140 030  \0  \0  \0  \0  \0  \0  \0  \t  \0  \0  \0 003  \0  \0  \0
0004160  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0
0004200   8 003  \0  \0  \0  \0  \0  \0   A  \0  \0  \0  \0  \0  \0  \0
0004220  \0  \0  \0  \0  \0  \0  \0  \0 001  \0  \0  \0  \0  \0  \0  \0
0004240  \0  \0  \0  \0  \0  \0  \0  \0
0004250

